{"version":3,"sources":["assets/pic1.png","assets/pic2.png","layout/header/Logo.tsx","layout/header/Actions.tsx","layout/header/Header.tsx","layout/body/features/Feature.tsx","layout/body/features/features/manage-your-repo-yourself/index.md","layout/body/features/features/manage-your-repo-yourself/git-repo.ts","layout/body/features/features/rich-text-editor-with-markdown-style/rich-text.ts","layout/body/features/features/rich-text-editor-with-markdown-style/index.md","layout/body/features/features/manage-your-content-in-structured-tree/tree-structure.ts","layout/body/features/features/manage-your-content-in-structured-tree/index.md","layout/body/features/Features.tsx","Utils.ts","layout/body/download/Download.tsx","layout/body/home/Image.tsx","layout/body/home/Home.tsx","layout/body/Body.tsx","App.tsx","serviceWorker.ts","index.tsx","logo.png","layout/body/features/features/manage-your-repo-yourself/git.png","layout/body/features/features/rich-text-editor-with-markdown-style/rich.gif","layout/body/features/features/manage-your-content-in-structured-tree/tree.png"],"names":["module","exports","Logo","props","className","href","alt","src","logo","width","Actions","to","Header","markdownFeature","id","title","markdown","img","render","context","source","gitFeature","gitImg","RichText","TreeStructure","Features","featureId","useParams","features","tabs","map","f","selected","classNames","join","key","Tab","find","t","macLink","windowsLink","Download","defaultLink","window","navigator","platform","toLowerCase","indexOf","useState","anchor","setAnchor","onClick","e","stopPropagation","preventDefault","currentTarget","Popover","open","anchorOrigin","vertical","horizontal","transformOrigin","onClose","anchorEl","img1","require","img2","PurpleSwitch","withStyles","switchBase","color","backgroundColor","checked","track","Switch","Image","isDark","setDark","c","onChange","target","FormControlLabel","control","label","style","userSelect","display","Home","Body","exact","path","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cdb7a97d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic1.ea775f5b.png\";","module.exports = __webpack_public_path__ + \"static/media/pic2.d9b72133.png\";","import React, { FunctionComponent } from 'react';\nimport logo from '../../logo.png';\n\ninterface Props {}\n\nconst Logo: FunctionComponent<Props> = (props) => {\n    return <a className='app-logo' href='/'>\n        <img alt='logo' className='app-logo-img' src={logo} width={60}/>\n        <div className='app-logo-name'>Grace Note</div>\n    </a>;\n};\n\nexport default Logo;\n","import React, { FunctionComponent } from 'react';\nimport {Link} from \"react-router-dom\";\n\ninterface Props {}\n\nconst Actions: FunctionComponent<Props> = (props) => {\n    return <div className='app-actions'>\n        <Link to='/'>Home</Link>\n        {/*<Link to='/features'>Features</Link>*/}\n        {/*<Link to='/support'>Support</Link>*/}\n        <a href='mailto:yuankui64@gmail.com?subject=%5Bgrace-note%5D'>Contact</a>\n    </div>;\n};\n\nexport default Actions;\n","import React, {FunctionComponent} from 'react';\nimport Logo from \"./Logo\";\nimport Actions from \"./Actions\";\n\ninterface Props {\n}\n\nconst Header: FunctionComponent<Props> = (props) => {\n    return <div className='app-header'>\n        <Logo/>\n        <Actions/>\n    </div>;\n};\n\nexport default Header;\n","import React, {FC} from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport interface Feature {\n    title: string,\n    id: string,\n    render: FC,\n}\n\nexport function markdownFeature(id: string, title: string, markdown: string, img: string): Feature {\n    return {\n        id,\n        title,\n        render: (props, context) => {\n            return <div className='feature-container'>\n                <ReactMarkdown className='markdown' source={markdown}/>\n                <div className='img'>\n                    <img width={600} src={img}/>\n                </div>\n            </div>\n        }\n    }\n}","export default \"# 把内容存在自己的git仓库里，放心\";","import {Feature, markdownFeature} from \"../../Feature\";\nimport f2 from \"./index.md\";\n\nimport gitImg from './git.png';\n\nexport const gitFeature: Feature = markdownFeature('git-based-repo', 'Git Based repo', f2, gitImg);","import {Feature, markdownFeature} from \"../../Feature\";\nimport f1 from \"./index.md\";\nimport img from './rich.gif';\n\nexport const RichText: Feature = markdownFeature(\"rich-text\", \"RichText\", f1, img);","export default \"# Markdown语法 & 富文本展示\";","import {Feature, markdownFeature} from \"../../Feature\";\nimport f3 from \"./index.md\";\nimport img from './tree.png';\n\nexport const TreeStructure: Feature = markdownFeature(\"tree-structure\", \"Tree Structure\", f3, img);","export default \"# 树形结构，有条理的组织你的内容\";","import React, {FunctionComponent} from 'react';\nimport {Link, useParams} from \"react-router-dom\";\nimport {classNames} from \"../../../Utils\";\nimport {Feature} from \"./Feature\";\nimport {gitFeature} from \"./features/manage-your-repo-yourself/git-repo\";\nimport {RichText} from \"./features/rich-text-editor-with-markdown-style/rich-text\";\nimport {TreeStructure} from \"./features/manage-your-content-in-structured-tree/tree-structure\";\n\ninterface Props {}\n\nconst Features: FunctionComponent<Props> = (props) => {\n    let { featureId } = useParams();\n    const features: Array<Feature> = [\n        gitFeature,\n        RichText,\n        TreeStructure,\n    ];\n\n    let tabs = features.map(f => {\n        const selected = f.id === featureId;\n        const className = classNames([\n            'tab',\n            `selected-${selected}`\n        ]);\n        return <Link to={`/features/${f.id}`} className={className} key={f.id}>\n            {f.title}\n        </Link>;\n    });\n\n\n    let CurrentTab = features.find(t => t.id === featureId) || features[0] || {\n        render: () => null,\n    };\n\n    const Tab = CurrentTab.render;\n\n    return <div className='side-tab'>\n        <div className='tabs'>\n            {tabs}\n        </div>\n        <div className='tab-body'>\n            <Tab/>\n        </div>\n    </div>;\n};\n\nexport default Features;\n","export function classNames(classNames: Array<string>) {\n    return classNames.join(\" \");\n}","import React, {FunctionComponent, useState} from 'react';\nimport {Popover} from \"@material-ui/core\";\n\ninterface Props {\n}\n\nconst macLink = 'https://github.com/grace-note/grace-note/releases/download/v1.2.6/Grace-1.2.6.dmg';\nconst windowsLink = 'https://github.com/grace-note/grace-note/releases/download/v1.2.6/Grace.Setup.1.2.6.exe';\nconst linuxLink = 'https://github.com/grace-note/grace-note/releases/download/v1.2.6/Grace-1.2.6.AppImage';\n\nconst Download: FunctionComponent<Props> = (props) => {\n    const isMac = window.navigator.platform.toLowerCase().indexOf('mac') >= 0;\n\n    const defaultLink = isMac? macLink : windowsLink;\n\n    const [anchor, setAnchor] = useState(null as any);\n    const onClick = (e: React.MouseEvent) => {\n        e.stopPropagation();\n        e.preventDefault();\n        setAnchor(e.currentTarget);\n    };\n\n    const onClose = () => {\n        setAnchor(null);\n    }\n    return <div className='app-download'>\n        <a href={defaultLink} className='download' >\n            <i className=\"fas fa-download platform\"/>\n            <span>Download</span>\n            <span className={'select'} onClick={onClick}><i className=\"fas fa-angle-down \"/></span>\n        </a>\n        <Popover open={!!anchor}\n                 anchorOrigin={{\n                     vertical: 'bottom',\n                     horizontal: 'center',\n                 }}\n                 transformOrigin={{\n                     vertical: 'top',\n                     horizontal: 'center',\n                 }}\n                 onClose={onClose}\n                 anchorEl={anchor}>\n            <div className='download-popover'>\n                <a href={windowsLink}>\n                    <i className='fa-windows fab'/>\n                    <span>Windows</span>\n                </a>\n                <a href={macLink}>\n                    <i className=\"fab fa-apple\"/>\n                    <span>Mac</span>\n                </a>\n                <a href={linuxLink}>\n                    <i className=\"fab fa-linux\"/>\n                    <span>Linux</span>\n                </a>\n            </div>\n        </Popover>\n    </div>;\n};\n\nexport default Download;\n","import React, {FunctionComponent, useState} from 'react';\nimport {FormControlLabel, Switch, withStyles} from \"@material-ui/core\";\nimport {grey as color} from \"@material-ui/core/colors\";\n\nconst img1 = require('../../../assets/pic1.png');\nconst img2 = require('../../../assets/pic2.png');\n\nconst PurpleSwitch = withStyles({\n    switchBase: {\n        color: color[200],\n        '&$checked': {\n            color: color[500],\n        },\n        '&$checked + $track': {\n            backgroundColor: color[600],\n        },\n    },\n    checked: {},\n    track: {},\n})(Switch);\n\ninterface Props {\n}\n\nconst Image: FunctionComponent<Props> = (props) => {\n    const [isDark, setDark] = useState(false);\n    const c = (<PurpleSwitch\n        onChange={e => {\n            setDark(e.target.checked);\n        }}\n        checked={isDark}/>);\n\n    return <div className='app-image-container'>\n        <FormControlLabel control={c} label={\"Toggle DarkMode\"} style={{userSelect: \"none\"}}/>\n        <img alt={'light mode'} src={img1} width={800} style={{display: isDark? 'none': 'block'}}/>\n        <img alt={'dark mode'} src={img2} width={800} style={{display: isDark? 'block': 'none'}}/>\n    </div>;\n};\n\nexport default Image;\n","import React, { FunctionComponent } from 'react';\nimport Download from \"../download/Download\";\nimport Image from \"./Image\";\n\ninterface Props {}\n\nconst Home: FunctionComponent<Props> = (props) => {\n    return <div className='app-section'>\n        <div className='app-section-description'>\n            <h1 className='app-section-description-title'>\n                A Notebook for Programmers\n            </h1>\n            <div className='app-section-description-extra'>\n                <Download/>\n            </div>\n        </div>\n\n        <div className='app-section-image'>\n            <Image/>\n        </div>\n    </div>;\n};\n\nexport default Home;\n","import React, {FunctionComponent} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Features from \"./features/Features\";\nimport Home from \"./home/Home\";\n\ninterface Props {}\n\nconst Body: FunctionComponent<Props> = (props) => {\n    return <div className='app-body'>\n        <Switch>\n            <Route exact path='/'>\n                <Home/>\n            </Route>\n            <Route path='/features/:featureId?'>\n                <Features/>\n            </Route>\n        </Switch>\n    </div>\n};\n\nexport default Body;\n","import React from 'react';\nimport './App.scss';\nimport Header from \"./layout/header/Header\";\nimport Body from \"./layout/body/Body\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n        <App/>\n    </Router>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.a9912d82.png\";","module.exports = __webpack_public_path__ + \"static/media/git.04aea0e1.png\";","module.exports = __webpack_public_path__ + \"static/media/rich.ee16bb59.gif\";","module.exports = __webpack_public_path__ + \"static/media/tree.a4b11f97.png\";"],"sourceRoot":""}